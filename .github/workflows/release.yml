on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
        run: |
          dotnet publish -r win-x64 -c Release FuzzyComic.csproj && \
          dotnet publish -r linux-x64 -c Release FuzzyComic.csproj && \
          dotnet publish -r osx-x64 -c Release FuzzyComic.csproj

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/netcoreapp3.1/win-x64/publish/FuzzyComic.exe
          asset_name: FuzzyComic_Windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload Linux Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/netcoreapp3.1/linux-x64/publish/FuzzyComic
          asset_name: FuzzyComic_Linux
          asset_content_type: application/octet-stream
      - name: Upload macOS Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/netcoreapp3.1/osx-x64/publish/FuzzyComic
          asset_name: FuzzyComic_macOS
          asset_content_type: application/octet-stream
